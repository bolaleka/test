{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\owner1\\\\Desktop\\\\React-App\\\\client\\\\src\\\\components\\\\GetPages.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from '@apollo/client';\nimport { NavLink } from 'react-router-dom';\nimport Pagination from './Pagination';\nimport PAGE_QUERY from '../GraphQL/Queries';\nimport '../CSS/Style.css'; //This function retrieve graphql data and set a table to display on browser.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GetPages() {\n  _s();\n\n  //Get the current page number from Pagination component\n  //and pass it as a value to useQuery funtion.\n  let pageID = localStorage.getItem('currentPage');\n  const {\n    error,\n    loading,\n    data\n  } = useQuery(PAGE_QUERY, {\n    variables: {\n      id: pageID\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h5\", {\n    className: \"title\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 25\n  }, this);\n  if (error) return `Error! ${error.message}`; //This checks if we sucessfully retrieve data from GraphQL server\n  //and display the date in table format.\n\n  if (data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"title\",\n        children: \"React Dynamic Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"table\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: renderTableHeader(data)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 22\n          }, this), renderTableData(data)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n  return null;\n} //Function to render the table header\n\n\n_s(GetPages, \"GiCbuNzsD6/Beq272EawZ+N+s04=\", false, function () {\n  return [useQuery];\n});\n\n_c = GetPages;\n\nfunction renderTableHeader(data) {\n  let header = Object.keys(data.page.results[0]);\n  return header.map((key, index) => {\n    return /*#__PURE__*/_jsxDEV(\"th\", {\n      children: [\" \", key.toUpperCase()]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }, this);\n  });\n} //Render the require deatails from the data and \n//set person name to navigate profile component when click.\n\n\nfunction renderTableData(data) {\n  return data.page.results.map(result => {\n    const {\n      name,\n      mass,\n      height,\n      gender,\n      homeworld\n    } = result;\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: {\n            pathname: `/Profile/search=${name}`,\n            aboutProps: result\n          },\n          style: {\n            textDecoration: 'none'\n          },\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: mass\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: height\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: gender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: homeworld\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 14\n      }, this)]\n    }, name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this);\n  });\n}\n\nexport default GetPages;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetPages\");","map":{"version":3,"sources":["C:/Users/owner1/Desktop/React-App/client/src/components/GetPages.js"],"names":["useQuery","NavLink","Pagination","PAGE_QUERY","GetPages","pageID","localStorage","getItem","error","loading","data","variables","id","message","renderTableHeader","renderTableData","header","Object","keys","page","results","map","key","index","toUpperCase","result","name","mass","height","gender","homeworld","pathname","aboutProps","textDecoration"],"mappings":"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","sourcesContent":["import {useQuery} from '@apollo/client';\r\nimport { NavLink} from 'react-router-dom';\r\nimport Pagination from './Pagination';\r\nimport PAGE_QUERY from '../GraphQL/Queries';\r\nimport '../CSS/Style.css';\r\n\r\n\r\n//This function retrieve graphql data and set a table to display on browser.\r\n function GetPages() {\r\n\r\n   //Get the current page number from Pagination component\r\n   //and pass it as a value to useQuery funtion.\r\n   let pageID = localStorage.getItem('currentPage')\r\n   \r\n    const {error, loading, data} = useQuery(PAGE_QUERY, {variables: {id: pageID}});\r\n\r\n    if (loading) return <h5 className=\"title\">Loading...</h5>;\r\n    if (error) return `Error! ${error.message}`\r\n    \r\n    //This checks if we sucessfully retrieve data from GraphQL server\r\n    //and display the date in table format.\r\n    if(data) {\r\n        return (\r\n            <div>\r\n               <h1 id='title'>React Dynamic Table</h1>\r\n               <Pagination/>\r\n               <table id='table'>\r\n                  <tbody>\r\n                     <tr>{renderTableHeader(data)}</tr>\r\n                     {renderTableData(data)}\r\n                  </tbody>\r\n               </table>\r\n            </div>\r\n         )\r\n    }\r\n    return null\r\n}\r\n\r\n//Function to render the table header\r\nfunction renderTableHeader(data) {\r\n    \r\n    let header = Object.keys(data.page.results[0])\r\n    return header.map((key, index) => {\r\n       return <th key={index}> {key.toUpperCase()}</th>\r\n    })\r\n }\r\n\r\n //Render the require deatails from the data and \r\n //set person name to navigate profile component when click.\r\n function renderTableData(data) {  \r\n    return data.page.results.map((result) => {\r\n       const { name, mass, height, gender, homeworld} = result;\r\n\r\n       return (\r\n          <tr key={name}>\r\n            <td>\r\n            <NavLink to={{\r\n                pathname: `/Profile/search=${name}`,\r\n                aboutProps: result\r\n                  }}\r\n            style={{ textDecoration: 'none'}}>{name}\r\n            </NavLink>\r\n             </td> \r\n             <td>{mass}</td>\r\n             <td>{height}</td>\r\n             <td>{gender}</td>\r\n             <td>{homeworld}</td>\r\n          </tr>\r\n       )\r\n    })\r\n }\r\nexport default GetPages;"]},"metadata":{},"sourceType":"module"}